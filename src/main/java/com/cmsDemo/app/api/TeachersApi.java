/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.21).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.cmsDemo.app.api;

import com.cmsDemo.app.model.Teacher;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-08-20T11:36:07.743+05:30")

@Validated
@Api(value = "teachers", description = "the teachers API")
@RequestMapping(value = "")
public interface TeachersApi {

    @ApiOperation(value = "", nickname = "createTeacher", notes = "Create new teacher", response = Teacher.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Teacher.class),
        @ApiResponse(code = 409, message = "Teacher with id already exists") })
    @RequestMapping(value = "/teachers",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> createTeacher(@ApiParam(value = "teachers object" ,required=true )  @Valid @RequestBody Teacher body);


    @ApiOperation(value = "", nickname = "deleteTeacher", notes = "Delete a teacher using ID", tags={  })
    @ApiResponses(value = {  })
    @RequestMapping(value = "/teachers/{teacherId}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteTeacher(@ApiParam(value = "teacher id to delete",required=true) @PathVariable("teacherId") Long teacherId);


    @ApiOperation(value = "", nickname = "getAllTeachers", notes = "Returns a list of teachers", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation"),
        @ApiResponse(code = 204, message = "No teachers in DB") })
    @RequestMapping(value = "/teachers",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Teacher>> getAllTeachers();


    @ApiOperation(value = "", nickname = "getTeacherById", notes = "Get a teacher using ID", response = Teacher.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Teacher.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Teacher not found") })
    @RequestMapping(value = "/teachers/{teacherId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Teacher> getTeacherById(@ApiParam(value = "teacher id to retrive data",required=true) @PathVariable("teacherId") Long teacherId);


    @ApiOperation(value = "", nickname = "updateTeacher", notes = "Update teacher", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation"),
        @ApiResponse(code = 404, message = "Teacher with id does not exists") })
    @RequestMapping(value = "/teachers",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateTeacher(@ApiParam(value = "teachers object" ,required=true )  @Valid @RequestBody Teacher body);

}
